{"version":3,"sources":["ng://flx-ui-datatable/lib/flx-ui-datatable.service.ts","ng://flx-ui-datatable/lib/flx-ui-datatable-service.service.ts","null","ng://flx-ui-datatable/lib/flx-ui-datatable.component.ts","ng://flx-ui-datatable/lib/ceil.pipe.ts","ng://flx-ui-datatable/lib/flx-ui-datatable.module.ts"],"names":["FlxUiDatatableService","http","this","BehaviorSubject","behavior","asObservable","prototype","setLazyloadingConfig","config","lazyloadingConfig","getData","url","headers","Headers","append","get","pipe","retry","map","response","json","postData","id","data","post","resp","setDataUrl","dataUrl","getDataUrl","chageDataTable","next","createPagination","numberOfList","limit","obj","counter","i","push","label","value","isLazyLoadingEnabled","hasOwnProperty","apiOffsetKey","loadFlxDataTableData","setSelectPagination","loadFinish","loader","subscribe","responseData","_this","multipleDeletion","dataSrcKey","totalItems","total","length","dataOffset","pagination","e","console","log","cancelLoading","unsubscribe","setDataSrcKey","srcKey","getDataLength","Promise","resolve","flxData","Injectable","Http","FlxUiDataTable","service","ChangeData","reloadData","abortRequest","__values","o","m","Symbol","iterator","call","done","FlxUiDatatableComponent","__form","text","icon","background","textColor","borderSize","borderColor","EventEmitter","reload","reloadUrl","checkToExportOption","checked","isExportAll","exportDocumentsAs","exportType","loading","document","getElementById","style","display","dataExportsConfig","dataColumns","dataKeys","displayData","arrayObj","data_1","tslib_1.__values","data_1_1","d","h","printJS","printable","properties","type","extension_1","pageId","requestData","JSON","stringify","download","window","location","href","hasImageEmbeded","embedPictures","getImage","JSONToCSVConvertor","JSONData","ReportTitle","ShowLabel","arrData","parse","CSV","row","index","slice","fileName","replace","uri","escape","link","createElement","body","appendChild","click","removeChild","alert","changeDisplayData","newData","ngOnInit","isLazyloadingEnabled","apiSearchKey","searchForm","group","searchString","Validators","required","tData","searchDataTempOffset","searchDataInApi","values","form","ngAfterViewInit","actionButtonClicked","buttonIndex","firstActionButtonClicked","emit","secondActionButtonClicked","thirdActionButtonClicked","addButtonClick","addButtonClicked","confirmDelete","multipleSelectClicked","addRemove","data_2","data_2_1","multipleSelectKey","addRemoveDeleteItem","dataKeyvalue","selected","splice","getSearchColumns","disablePrevtButton","Math","ceil","disableNextButton","nextPrevItem","then","dataLength","catch","paginateDatatableRecord","filterData","searchResults","trim","searchKeys","found","x","String","toLowerCase","indexOf","toLocaleLowerCase","paginateDatatable","parseInt","num","offset","paginateResult","Component","args","selector","template","styles","FormBuilder","Input","Output","ImageFallBack","el","nativeElement","addEventListener","EVENT_TYPE","onError","bind","removeEvents","isApplied","setAttribute","imgSrc","removeEventListener","ngOnDestroy","Directive","ElementRef","Ceil","transform","Pipe","name","FlxUiDatatableModule","NgModule","imports","CommonModule","ReactiveFormsModule","FormsModule","HttpModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core' ;\nimport { Http,Headers,Response} from '@angular/http' ;\nimport { map,retry } from 'rxjs/operators' ;\nimport { Observable,pipe,BehaviorSubject,Subscription } from 'rxjs';\n@Injectable()\nexport class FlxUiDatatableService{\n  //User data API url\n  private dataUrl: string = '' ;\n  public behavior: BehaviorSubject<any> = new BehaviorSubject<any>([]) ;\n  //Hold all data from API\n  public flxData = this.behavior.asObservable();  \n  //Header select pagination\n  public pagination: Array<Object> = [] ;\n  //Hold total items loaded from API\n  public totalItems: number = 0 ;\n  //Keep track of current pagination offset\n  public dataOffset: number = 0 ;\n  //User defined limit for number of items per pagination\n  public limit: number = 20 ;\n  //Data source key to read from API payload response\n  public dataSrcKey:string = '';\n  //Hold items selected for multiple select\n  multipleDeletion:Array<any> = [] ;\n  //Hold subscription of api calls which can be canced by calling cancelLoading() \n  loader: Subscription ;  \n  //Keep track if API call is completed\n  loadFinish: boolean = false ;\n  // Lazy loading config\n  private lazyloadingConfig: any = {} ;\n  constructor(public http: Http){\n      \n  }\n\n  public setLazyloadingConfig(config:any){\n    this.lazyloadingConfig = config ;\n  }\n\n  //GET request to user's API url\n  /**\n   * \n   * @param url User api rul\n   */\n  public getData(url:string): Observable<any>{\n      let headers: Headers = new Headers() ;\n      headers.append('Content-Type','application/x-www-form-urlencoded') ;\n      return this.http.get(url,{headers:headers}).pipe(retry(5),map((response: Response) => response.json())) ;\n  }\n\n  //Post request for data export\n  /**\n   * \n   * @param url Service api url\n   * @param id Datatype id to export\n   * @param data Data to export\n   */\n  public postData(url:string,id:any,data:string): Observable<any>{\n    let headers: Headers = new Headers() ;\n    headers.append('Content-Type','application/json; charset=utf-8') ;\n    return this.http.post(url+id,data,{headers:headers}).pipe(map((resp: Response) => resp.json())) ;\n  }\n\n  /**\n   * \n   * @param dataUrl Set dataurl\n   */\n  public setDataUrl(dataUrl:string):void{\n    this.dataUrl = dataUrl ;\n  }\n\n  //Get data url \n  public getDataUrl():string{\n    return this.dataUrl ;\n  }\n\n  /**\n   * \n   * @param data Register new data from user API\n   */\n  public chageDataTable(data:any){\n    this.behavior.next(data) ;\n  }\n\n  /**\n   * \n   * @param numberOfList Total number of list\n   * @param limit Pagination limit\n   */\n  private createPagination(numberOfList:number,limit:number): Array<Object>{\n    let obj: Array<Object> = [] ;\n    let counter: number = 1 ;\n    for(let i=0;i<numberOfList;i+=limit){\n        obj.push({label:counter,value:i}) ;\n        counter++ ;\n    }\n    if(!this.isLazyLoadingEnabled){\n      obj.push({ label: 'All', value: 'all' });\n    }\n    return obj ;\n  }\n\n  public isLazyLoadingEnabled(){\n    return this.lazyloadingConfig.hasOwnProperty(\"apiOffsetKey\") && this.lazyloadingConfig.apiOffsetKey ;\n  }\n\n  //Event to load data from users api\n  public loadFlxDataTableData(dataUrl:string,setSelectPagination:boolean=true){\n    this.loadFinish = false ;\n      this.loader = this.getData(dataUrl).subscribe((responseData) => {\n          try{\n              this.multipleDeletion = [] ;\n              var data = (this.dataSrcKey) ? responseData[this.dataSrcKey] : responseData;\n              this.chageDataTable(data) ;\n              if(this.isLazyLoadingEnabled()){                \n                this.totalItems = responseData.total ;\n                // Handle 1 pagination out of zero problem 1/0  instead of 0/0 if no data is comming\n                if(data.length>0){\n                  this.dataOffset = this.dataOffset+this.limit;\n                }\n              }else{\n                this.totalItems = data.length ;\n                this.dataOffset = 1;\n              }\n              if(setSelectPagination){\n                if(this.isLazyLoadingEnabled()){\n                  this.pagination = this.createPagination(responseData.total, this.limit);\n                }else{\n                  this.pagination = this.createPagination(data.length, this.limit);\n                }\n              }\n              this.loadFinish = true;\n          }catch(e){\n              console.log('Error in reading data in ',e) ;\n          }\n      },(e => {\n          this.loadFinish = true ;\n      }))\n  }\n\n  //Cancel api GET request to api\n  public cancelLoading(){\n    this.loader.unsubscribe() ;\n  }  \n\n  //Set source key to read from payload response JSON\n  setDataSrcKey(srcKey:string):void {\n    this.dataSrcKey = srcKey;\n  }\n\n  getDataLength(): Promise<number>{\n    return new Promise<number>((resolve) =>{\n      this.flxData.subscribe((resp) =>{\n        resolve(resp.length) ;\n      },(e=>{\n        resolve(0) ;\n      }))\n    }) ;\n  }\n}","import { Injectable} from '@angular/core' ;\nimport { FlxUiDatatableService } from './flx-ui-datatable.service' ;\nimport { BehaviorSubject,Observable } from 'rxjs';\n@Injectable()\nexport class FlxUiDataTable{\n    behavior: BehaviorSubject<any> = new BehaviorSubject([]);\n    flxDatatableData = this.behavior.asObservable();\n    constructor(private service: FlxUiDatatableService){\n        this.service.flxData.subscribe((resp) => {\n            this.ChangeData(resp);\n        });\n    }\n\n    /**\n     * \n     * @param data Change table data with new data\n     */\n    ChangeData(data) {\n        this.behavior.next(data);\n    }\n\n    /**\n     * Reload data from api: void\n     */\n    public reloadData(): void{\n        this.service.loadFlxDataTableData(this.service.getDataUrl()) ;\n    }\n\n    public abortRequest(){\n        this.service.cancelLoading() ;\n    }\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, Input,Output,EventEmitter, OnInit,AfterViewInit } from '@angular/core';\nimport { FormGroup,Validators,FormBuilder} from '@angular/forms' ;\nimport { FlxUiDatatableService } from './flx-ui-datatable.service' ;\nimport { AsyncPipe } from '@angular/common' ;\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\ndeclare var printJS: any ;\n@Component({\n  selector:'flx-ui-datatable',\n  template: `<div class=\"col-md-12 flx-ui-datatable-main {{ classes?.maincontainer }}\">\n    <div id=\"export_loading\" class=\"col-md-12 text-center\" style=\"display: none;margin-bottom:0.5em;color:#dddddd;font-size:13px;font-weight:bold;\">Exporting...</div>\n    <div class=\"col-md-12 flx-ui-datatable-header\">\n        <div class=\"col-xs-3 col-sm-3 pagination-select col-md-2\" style=\"position:relative;z-index: 1;\">\n            <select class=\"form-control rmsh rmrd {{ classes?.paginationselect }}\" (change)=\"paginateDatatable($event?.target?.value)\">\n                <option *ngFor=\"let paging of service?.pagination\" [value]=\"paging?.value\">{{ paging?.label }}</option>\n            </select>\n        </div>\n        <div class=\"col-xs-5 col-sm-5 col-md-2 text-center flx-datatable-pagination rmpd\" style=\"position:relative;z-index: 2;\">\n            <button mat-icon-button [ngClass]=\"{'flx-pagination-end': disablePrevtButton()}\" (click)=\"nextPrevItem('prev')\" [disabled]=\"disablePrevtButton()\" class=\"flx-ui-datatable-pagination-buttons {{ classes?.paginationButton }}\"><span class=\"fa fa-angle-double-left fa-1x\"></span> <span class=\"flx-datatable-tooltip-prev\" [ngClass]=\"{'flx-pagination-end': disablePrevtButton()}\">Previous</span> </button>\n                {{ service?.dataOffset | ceil: limit }} / {{ service?.totalItems | ceil: limit }}\n            <button mat-icon-button [ngClass]=\"{'flx-pagination-end': disableNextButton()}\" (click)=\"nextPrevItem('next')\" [disabled]=\"disableNextButton()\" class=\"flx-ui-datatable-pagination-buttons {{ classes?.paginationButton }}\"><span class=\"fa fa-angle-double-right fa-1x\"></span> <span class=\"flx-datatable-tooltip-next\" [ngClass]=\"{'flx-pagination-end': disableNextButton()}\">Next</span></button>\n        </div>\n        <div [class]=\"'search-bar '+getSearchColumns()\">\n            <input type=\"text\" *ngIf=\"!isLazyloadingEnabled()\" [style.background]=\"searchBar?.background\" [style.color]=\"searchBar?.textColor\" [ngStyle]=\"{border:searchBar?.borderSize +' solid '+ searchBar?.borderColor} \" (keyup)=\"filterData($event?.target?.value)\" class=\"form-control rmsh rmrd customclass\" [placeholder]=\"searchPlaceholder\">\n            <form (ngSubmit)=\"searchDataInApi(srch?.value,srch)\" #srch=\"ngForm\" *ngIf=\"isLazyloadingEnabled()\">\n                <div class=\"input-group\">\n                    <input type=\"text\" required name=\"searchString\" ngModel [style.background]=\"searchBar?.background\" [style.color]=\"searchBar?.textColor\" [ngStyle]=\"{border:searchBar?.borderSize +' solid '+ searchBar?.borderColor} \" class=\"form-control rmsh rmrd {{ classes?.searchbar }}\" [placeholder]=\"searchPlaceholder\">\n                    <span class=\"input-group-addon\">\n                        <button [disabled]=\"!srch?.valid\" type=\"submit\" class=\"btn btn-default btn-clear btn-md\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </span>\n                </div>\n            </form>\n        </div>\n        <div class=\"col-md-1 text-right rmpd\" *ngIf=\"hasAddButton\">\n            <button (click)=\"addButtonClick()\" class=\"{{ classes?.addButton }}\" [style.background]=\"addButton?.background\" [style.borderColor]=\"addButton?.background\" [style.color]=\"addButton?.textColor\"><span class=\"glyphicon glyphicon-plus\"></span> Add</button>\n        </div>\n        <div class=\"col-md-1 text-right rmpd export-cnt\" *ngIf=\"enableDataExports\">\n            <span class=\"dropdown\">\n                <button class=\"btn btn-default {{ classes?.exportButton }} dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                \n                <i class=\"caret\"></i>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-export\">\n                    <li class=\"dropdown-header\">{{ dataExportsConfig?.title }}. <input type=\"checkbox\" (change)=\"checkToExportOption($event?.target?.checked)\" style=\"position: relative;top:0.3em;\"> <sup style=\"font-size:10px;color:#999;\"> All</sup></li> \n                    <li class=\"divider\"></li>\n                    <li class=\"dropdown-submenu\" *ngFor=\"let export of dataExportsConfig?.exportsTo\" (click)=\"exportDocumentsAs(export)\">\n                        <a href=\"javascript:void(0)\" *ngIf=\"export=='print'\"><i class=\"glyphicon glyphicon-print\"></i> Print</a>\n                        <a href=\"javascript:void(0)\" *ngIf=\"export=='pdf'\" style=\"color:#ff0000\"><i class=\"glyphicon glyphicon-file\"></i> PDF</a>\n                        <a href=\"javascript:void(0)\" *ngIf=\"export=='excel'\" style=\"color:#009900;\"><i class=\"glyphicon glyphicon-file\"></i> Excel</a>            \n                        <a href=\"javascript:void(0)\" *ngIf=\"export=='word'\" style=\"color:#335599;\"><i class=\"glyphicon glyphicon-file\"></i> Word</a>                        \n                    </li>\n                    <li class=\"divider\"></li>\n                    <li class=\"dropdown-header\">\n                        <span  *ngIf=\"!isExportAll\">{{ (displayData | async)?.length }}</span>\n                        <span  *ngIf=\"isExportAll\">{{ (service?.flxData | async)?.length }}</span> \n                    </li>\n                </ul>\n            </span>\n        </div>\n    </div>\n    <div class=\"col-md-12 rmpd table-responsive\">\n        <table class=\"table {{ classes?.tableType }} table-responsive\" id=\"flx_ui_table_tag\">\n            <thead class=\"{{ classes?.tableHeader }}\">\n                <tr>\n                    <th *ngIf=\"!hideNumbers\">N<sup><u>o</u></sup></th>\n                    <th *ngFor=\"let header of headers\">{{ header }}</th>\n                    <th *ngIf=\"hasActionButtons\">{{ actionHeader }} \n                        <input type=\"checkbox\" [checked]=\"service?.multipleDeletion?.length>0\" (change)=\"addRemove($event?.target?.checked)\" *ngIf=\"enableMultipleSelection\">\n                        <button class=\"btn btn-danger btn-xs flx-multiple-deletion-button\" *ngIf=\"enableMultipleSelection && service?.multipleDeletion?.length>0\" (click)=\"confirmDelete()\"><span [class]=\"multipleSelectButton?.icon\"></span> {{ multipleSelectButton?.text }}</button>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngIf=\"!service?.loadFinish\">                    \n                    <td colspan=\"20\" class=\"text-center\">\n                        <img *ngIf=\"spinnerSrc\" [class]=\"classes?.spinner\" [src]=\"spinnerSrc\" style=\"margin-top:1em;margin-bottom:1em;\">\n                    </td>\n                </tr>\n                <tr class=\"flxuidatatablerow\" id=\"flxdatatable_singlerow\" *ngFor=\"let data of displayData | async;let i=index\">\n                    <!-- Numbers -->\n                    <td class=\"{{ classes?.tableData }}\" *ngIf=\"!hideNumbers\" style=\"color: #999;\">{{ offset+i }}</td>\n                    <!-- Main -->\n                    <td class=\"{{ classes?.tableData }}\" *ngFor=\"let dataKey of dataKeys;let x=index\">\n                        <img *ngIf=\"hasImageEmbeded() && x==embedPictures?.index\" [class]=\"'img-fall-back ' +embedPictures?.class\" [src]=\"embedPictures?.rootFolder+data[dataKey]\" [flx-ui-datatable-img-fallback]=\"embedPictures?.fallbackUrl\" >\n                        <span *ngIf=\"!hasImageEmbeded() || x!=embedPictures?.index\">{{ data[dataKey] }}</span>\n                    </td>\n                    <!-- Buttons -->\n                    <td class=\"table-buttons\" *ngIf=\"hasActionButtons\" scope=\"row\">\n                        <span *ngFor=\"let aButton of actionButtons;let buttonIndex=index\">\n                            <button (click)=\"actionButtonClicked(i,buttonIndex)\" class=\"btn {{ aButton?.class }}\">\n                                <div class=\"toltip\" class=\"flx-tooltip\" [ngClass]=\"{'flx-tooltip-left':aButton?.tooltipPosition=='left','flx-tooltip-bottom':aButton?.tooltipPosition=='bottom','flx-tooltip-right':aButton?.tooltipPosition=='right'}\" *ngIf=\"aButton?.tooltip\">{{ aButton?.tooltip }}</div>\n                                <span class=\"action-button-icon-left\" [class]=\"aButton?.icon\" *ngIf=\"!aButton?.iconPosition || aButton?.iconPosition!='right'\"></span>\n                                <span class=\"button-text\"> {{ aButton?.text }} </span>\n                                <span [class]=\"aButton?.icon\" *ngIf=\"aButton?.iconPosition=='right'\"></span>\n                            </button>\n                        </span> \n                        <input type=\"checkbox\" checked (change)=\"addRemoveDeleteItem(data[multipleSelectKey],i,$event?.target?.checked)\" *ngIf=\"enableMultipleSelection && service?.multipleDeletion?.length>0\">\n                    </td>\n                </tr>\n                <tr *ngIf=\"tData?.length<1\">\n                    <td colspan=\"10\" class=\"text-center\" *ngIf=\"service?.loadFinish\">\n                        <span style=\"color:#ff0000;font-size:13px;\">No data found</span> <br>\n                        <button style=\"margin-top:1em;\" (click)=\"reload()\" class=\"btn btn-default {{ classes?.reloadbutton }}\" color=\"primary\"><span class=\"fa fa-refresh\"></span> Reload</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"col-md-12 rmpd flx-total-data\" *ngIf=\"showBottomInfo\">\n            <div class=\"col-md-4 text-left rmpd\">Total pagination: <span> {{ service?.totalItems | ceil: limit }}</span></div>\n            <div class=\"col-md-4 text-center rmpd\"># of items per pagination: <span>{{ limit }}</span></div>\n            <div class=\"col-md-4 text-right rmpd\">Total items: <span>{{ (service?.flxData | async)?.length }}</span></div>\n        </div>\n    </div>\n</div>`,\n  styles: [`.flx-ui-datatable-main{background-color:#fff;padding-top:1em;padding-bottom:1em}.flx-ui-datatable-main .btn-danger{background-color:#f50057;border:1px solid #f50057;box-shadow:0 3px 5px 1px #ddd;-moz-box-shadow:0 3px 5px 1px #ddd;-webkit-box-shadow:0 3px 5px 1px #ddd;-o-box-shadow:0 3px 5px 1px #ddd;-ms-box-shadow:0 3px 5px 1px #ddd;border-radius:3px;margin-left:.3em}.flx-ui-datatable-main img.img-fall-back{width:30px;height:30px}.flx-ui-datatable-main .pagination-select input[type=text],.flx-ui-datatable-main .pagination-select select,.flx-ui-datatable-main .search-bar input[type=text],.flx-ui-datatable-main .search-bar select{border-top:none!important;border-left:none!important;border-right:none!important;border-bottom:2px solid #ddd!important;border-radius:0!important;box-shadow:0 0 0 0 transparent!important;-moz-box-shadow:0 0 0 0 transparent!important;-webkit-box-shadow:0 0 0 0 transparent!important;-o-box-shadow:0 0 0 0 transparent!important;-ms-box-shadow:0 0 0 0 transparent!important}.flx-ui-datatable-main .pagination-select input[type=text]:focus,.flx-ui-datatable-main .pagination-select select:focus,.flx-ui-datatable-main .search-bar input[type=text]:focus,.flx-ui-datatable-main .search-bar select:focus{border-bottom-color:#359!important;transition:.5s;-moz-transition:.5s;-webkit-transition:.5s;-o-transition:.5s;-ms-transition:.5s}.flx-ui-datatable-main .pagination-select select,.flx-ui-datatable-main .search-bar select{-webkit-appearance:none;appearance:none;-moz-appearance:none}.flx-ui-datatable-main .flx-datatable-pagination{padding-top:.5em}.flx-ui-datatable-main .flx-datatable-pagination button{width:35px!important;height:35px!important;border-radius:50em!important;border:none!important;box-shadow:0 3px 10px 0 #b3c4e6;-moz-box-shadow:0 3px 10px 0 #b3c4e6;-webkit-box-shadow:0 3px 10px 0 #b3c4e6;-o-box-shadow:0 3px 10px 0 #b3c4e6;-ms-box-shadow:0 3px 10px 0 #b3c4e6;background-color:#359;color:#fff;font-size:23px;font-weight:700;position:absolute;top:0}.flx-ui-datatable-main .flx-datatable-pagination button:first-child{left:0}.flx-ui-datatable-main .flx-datatable-pagination button:first-child .flx-datatable-tooltip-prev{position:absolute;left:0;font-size:13px;font-weight:400;color:#fff;background-color:#359;padding-left:.3em;padding-right:.3em;border-radius:3px;margin-left:-57px;margin-top:.5em;box-shadow:0 3px 10px 0 #b3c4e6!important;-moz-box-shadow:0 3px 10px 0 #b3c4e6!important;-webkit-box-shadow:0 3px 10px 0 #b3c4e6!important;-o-box-shadow:0 3px 10px 0 #b3c4e6!important;-ms-box-shadow:0 3px 10px 0 #b3c4e6!important;visibility:hidden}.flx-ui-datatable-main .flx-datatable-pagination button:hover>span.flx-datatable-tooltip-next,.flx-ui-datatable-main .flx-datatable-pagination button:hover>span.flx-datatable-tooltip-prev{visibility:visible}.flx-ui-datatable-main .flx-datatable-pagination .flx-pagination-end{background-color:#f50057!important;box-shadow:0 3px 10px 0 #ffc2d8!important;-moz-box-shadow:0 3px 10px 0 #ffc2d8!important;-webkit-box-shadow:0 3px 10px 0 #ffc2d8!important;-o-box-shadow:0 3px 10px 0 #ffc2d8!important;-ms-box-shadow:0 3px 10px 0 #ffc2d8!important;cursor:not-allowed}.flx-ui-datatable-main .flx-datatable-pagination .flx-pagination-end:hover>span.flx-datatable-tooltip-next,.flx-ui-datatable-main .flx-datatable-pagination .flx-pagination-end:hover>span.flx-datatable-tooltip-prev{visibility:hidden}.flx-ui-datatable-main .flx-datatable-pagination button:last-child{right:0}.flx-ui-datatable-main .flx-datatable-pagination button:last-child .flx-datatable-tooltip-next{position:absolute;left:0;font-size:13px;font-weight:400;color:#fff;background-color:#359;padding-left:.3em;padding-right:.3em;border-radius:3px;margin-left:35px;margin-top:.5em;box-shadow:0 3px 10px 0 #b3c4e6!important;-moz-box-shadow:0 3px 10px 0 #b3c4e6!important;-webkit-box-shadow:0 3px 10px 0 #b3c4e6!important;-o-box-shadow:0 3px 10px 0 #b3c4e6!important;-ms-box-shadow:0 3px 10px 0 #b3c4e6!important;visibility:hidden}.flx-ui-datatable-main .export-cnt button{border-radius:50em!important}.flx-ui-datatable-main table{margin-top:1.5em}.flx-ui-datatable-main table tbody tr{padding-top:0!important}.flx-ui-datatable-main table tbody tr td{padding-top:.5em;border-top:1px solid #f0f0f0;border-bottom:1px solid #f0f0f0}.flx-ui-datatable-main table tbody tr td button{margin-right:.3em;margin-left:0}.flx-ui-datatable-main table tbody tr td button div.flx-tooltip{position:absolute;background-color:rgba(32,27,27,.808);text-align:center;font-size:13px;color:#fff;border-radius:3px;box-shadow:0 3px 20px 0 #4b4949;-moz-box-shadow:0 3px 20px 0 #4b4949;-webkit-box-shadow:0 3px 20px 0 #4b4949;-o-box-shadow:0 3px 20px 0 #4b4949;-ms-box-shadow:0 3px 20px 0 #4b4949;margin-left:-2.5em;margin-top:-2.8em;visibility:hidden;width:80px;padding:.3em .5em}.flx-ui-datatable-main table tbody tr td button .flx-tooltip-left{margin-left:-95px!important;margin-top:-.3em!important}.flx-ui-datatable-main table tbody tr td button .flx-tooltip-bottom{margin-top:2.3em!important}.flx-ui-datatable-main table tbody tr td button .flx-tooltip-right{margin-left:28px!important;margin-top:-.3em!important}.flx-ui-datatable-main table tbody tr td button:hover>div.flx-tooltip{transition:.3s;visibility:visible}.flx-ui-datatable-main table tbody tr td.table-buttons{padding-top:.2em;padding-bottom:.2em}.flx-ui-datatable-main table tbody tr:nth-of-type(even){background-color:#f8f9fa}.flx-ui-datatable-main table tbody tr:nth-of-type(odd){background-color:#fff}.flx-ui-datatable-main .btn-danger:hover{background-color:#ff146b;border:1px solid #ff146b;box-shadow:0 3px 10px 1px #ff5fb6;-moz-box-shadow:0 3px 10px 1px #ff5fb6;-webkit-box-shadow:0 3px 10px 1px #ff5fb6;-o-box-shadow:0 3px 10px 1px #ff5fb6;-ms-box-shadow:0 3px 10px 1px #ff5fb6;transition:.5s;-moz-transition:.5s;-webkit-transition:.5s;-o-transition:.5s;-ms-transition:.5s}.flx-ui-datatable-main .btn-danger:focus{background-color:#f50057;border:1px solid #f50057}.flx-ui-datatable-main .btn-white{background-color:#fff}.flx-ui-datatable-main .btn-dark{background-color:#222!important}.flx-ui-datatable-main .btn-primary{background-color:#359;color:#fff;border:1px solid #359;box-shadow:0 3px 5px 1px #ddd;-moz-box-shadow:0 3px 5px 1px #ddd;-webkit-box-shadow:0 3px 5px 1px #ddd;-o-box-shadow:0 3px 5px 1px #ddd;-ms-box-shadow:0 3px 5px 1px #ddd;border-radius:3px}.flx-ui-datatable-main .btn-primary:hover{background-color:#4769ad;border:1px solid #4769ad;box-shadow:0 3px 10px 0 #b3c4e6;-moz-box-shadow:0 3px 10px 0 #b3c4e6;-webkit-box-shadow:0 3px 10px 0 #b3c4e6;-o-box-shadow:0 3px 10px 0 #b3c4e6;-ms-box-shadow:0 3px 10px 0 #b3c4e6;transition:.5s;-moz-transition:.5s;-webkit-transition:.5s;-o-transition:.5s;-ms-transition:.5s}.flx-ui-datatable-main .btn-primary:focus{background-color:#359;border:1px solid #359}.flx-ui-datatable-main .btn-large{padding-top:1em!important;padding-bottom:1em!important}.flx-ui-datatable-main .btn-medium{padding-top:.7em!important;padding-bottom:.7em!important}.flx-ui-datatable-main .btn-success{box-shadow:0 3px 5px 1px #ddd;-moz-box-shadow:0 3px 5px 1px #ddd;-webkit-box-shadow:0 3px 5px 1px #ddd;-o-box-shadow:0 3px 5px 1px #ddd;-ms-box-shadow:0 3px 5px 1px #ddd;border-radius:3px;background-color:#5cb85c;border:1px solid #5cb85c}.flx-ui-datatable-main .btn-success:hover{background-color:#70cc70;border:1px solid #70cc70;box-shadow:0 3px 10px 1px #9df99d;-moz-box-shadow:0 3px 10px 1px #9df99d;-webkit-box-shadow:0 3px 10px 1px #9df99d;-o-box-shadow:0 3px 10px 1px #9df99d;-ms-box-shadow:0 3px 10px 1px #9df99d;transition:.5s;-moz-transition:.5s;-webkit-transition:.5s;-o-transition:.5s;-ms-transition:.5s}.flx-ui-datatable-main .btn-success:focus{background-color:#5cb85c;border:1px solid #5cb85c}.flx-ui-datatable-main .btn-default{background-color:#fff;box-shadow:0 3px 5px 1px #eee;-moz-box-shadow:0 3px 5px 1px #eee;-webkit-box-shadow:0 3px 5px 1px #eee;-o-box-shadow:0 3px 5px 1px #eee;-ms-box-shadow:0 3px 5px 1px #eee;border-radius:3px;border:1px solid #ddd}.flx-ui-datatable-main .btn-default:hover{background-color:#fff;border:1px solid #e7e7e7;box-shadow:0 3px 10px 1px #e2e2e2;-moz-box-shadow:0 3px 10px 1px #e2e2e2;-webkit-box-shadow:0 3px 10px 1px #e2e2e2;-o-box-shadow:0 3px 10px 1px #e2e2e2;-ms-box-shadow:0 3px 10px 1px #e2e2e2;transition:.5s;-moz-transition:.5s;-webkit-transition:.5s;-o-transition:.5s;-ms-transition:.5s}.flx-ui-datatable-main .btn-default:focus{background-color:#fff;border:1px solid #ddd}.flx-ui-datatable-main .btn-secondary{box-shadow:0 3px 5px 1px #ddd;-moz-box-shadow:0 3px 5px 1px #ddd;-webkit-box-shadow:0 3px 5px 1px #ddd;-o-box-shadow:0 3px 5px 1px #ddd;-ms-box-shadow:0 3px 5px 1px #ddd;border-radius:3px;background-color:#1e88e5;color:#fff}.flx-ui-datatable-main .btn-secondary:hover{color:#fff;background-color:#2892ef;border:1px solid #2892ef;box-shadow:0 3px 10px 1px #55bfff;-moz-box-shadow:0 3px 10px 1px #55bfff;-webkit-box-shadow:0 3px 10px 1px #55bfff;-o-box-shadow:0 3px 10px 1px #55bfff;-ms-box-shadow:0 3px 10px 1px #55bfff;transition:.5s;-moz-transition:.5s;-webkit-transition:.5s;-o-transition:.5s;-ms-transition:.5s}.flx-ui-datatable-main .btn-secondary:focus{color:#fff}.flx-ui-datatable-main .pagination-button{background-color:#359;color:#fff}.flx-ui-datatable-main .table-font{font-family:Khula,sans-serif!important}.flx-ui-datatable-main .table-header-icon{position:absolute;right:.2em;width:80px;height:80px;font-size:50px;margin-top:-30px;border-radius:5px!important}.flx-ui-datatable-main .table-title{background-color:#359;color:#fff;border-radius:2px;padding:1em;font-size:15px;font-weight:700;margin-bottom:1.5em;font-family:Roboto,sans-serif;box-shadow:0 1px 5px 1px #ddd;-moz-box-shadow:0 1px 5px 1px #ddd;-webkit-box-shadow:0 1px 5px 1px #ddd;-o-box-shadow:0 1px 5px 1px #ddd;-ms-box-shadow:0 1px 5px 1px #ddd}.flx-ui-datatable-main .danger{background-color:#f50057;color:#fff}.flx-ui-datatable-main .primary{background-color:#359;color:#fff}.flx-ui-datatable-main .success{background-color:#5cb85c;color:#fff}.flx-ui-datatable-main .default{background-color:#fff;color:#000}.flx-ui-datatable-main .secondary{background-color:#1e88e5;color:#fff}.flx-ui-datatable-main .btn-clear{border:none!important;box-shadow:none!important}.flx-ui-datatable-main .input-group,.flx-ui-datatable-main .input-group input{background-color:transparent!important}.flx-ui-datatable-main .input-group-addon{border:none!important;padding:0!important;box-shadow:none!important;background-color:transparent!important}.flx-ui-datatable-main .input-group-addon button{border:1px solid transparent!important;box-shadow:none!important;border-top:none!important;border-bottom:none!important;background-color:transparent!important;border-radius:50em!important;color:#359;width:30px;height:30px}.flx-ui-datatable-main .input-group-addon button i{font-size:18px}.flx-ui-datatable-main .input-group-addon button:disabled{background-color:transparent!important}.flx-ui-datatable-main .input-group-addon button:disabled i{color:#f50057}`]\n})\nexport class FlxUiDatatableComponent implements OnInit,AfterViewInit{\n  @Input() classes: any = {} ;//{maincontainer|spinner|addButton|tableHeader|tableData|exportButton|SearchBar|tableType}\n  @Input() headers: Array<string> = [] ; // Table headers (v: 1.0.0) \n  @Input() lazyloadingConfig: any = {} ;\n  @Input() embedPictures: any = {} ;\n  @Input() dataKeys: Array<string> = [] ; // Data keys to populate.  (v: 1.0.0)\n  @Input() enableDataExports: boolean = false ;//Default to false; (v: 1.0.1)\n  @Input() dataExportsConfig: any = {} ;// data exports configuration: {exportsTo:['print','word','pdf','excel'],title:'Exports data',dataColumns:[]}} Data columns to export\n  @Input() showBottomInfo: false ; // To enable table bottom information\n  @Input() searchKeys = [] ; // Keys to search for search optimization.  (v: 1.0.0)\n  @Input() dataSrcKey: string = '' // Data to read from json response.  (v: 1.0.0)\n  @Input() hasActionButtons: boolean = false ; //specify if datatable should have and add button. (v: 1.0.0)\n  @Input() hideNumbers: boolean = false ; //specify if the numbers.  (v: 1.0.0)\n  @Input() enableMultipleSelection: boolean = false ; // Enable multiple select input box to appear. (v: 1.0.0) enableMultipleDelete renamed to enableMultipleSelection in (v:1.0.1)\n  @Input() multipleSelectKey: string = '' ; // Specify which key to select. (v:1.0.0) multipleDeleteKey renamed to multipleSelectKey in (v:1.0.0) ;\n  @Input() hasAddButton: boolean = false ; // Enable to show add button on the header. (v: 1.0.0)\n  @Input() dataUrl: string = '' ; // Url to load table data. (v: 1.0.0)\n  @Input() actionButtonStart: boolean = false ;\n  @Input() multipleSelectButton = { text: 'Selected', icon: '' }; // Change text and icon on multiple select button. (v: 1.0.1)\n  @Input() searchPlaceholder: string = 'Enter name to search' ; // Change search bar placeholder. (v: 1.0.0)\n  @Input() actionHeader: string = 'Actions' ; // Change text for action buttons header. (v: 1.0.0)\n  @Input() limit: number = 20 ; // Specify number of items per pagination. (v: 1.0.0)\n  @Input() spinnerSrc: any = '' ; // Spinner to show when loading data from API. (v: 1.0.1)\n  @Input() actionButtons: Array<Object> = [] ; // Specify action buttons. Make sure to set hasActionButtons to true if you want to show button in the table row. (v: 1.0.0)\n  @Input() paginationButtons: any = {background:'#dddddd',textColor:'#335599'} ; // Change button button background and textColor. (v: 1.0.0)\n  @Input() tableHeader: any = {background:'#ffffff',textColor:'#335599'} ; // Change table header background and text color. (v: 1.0.0)\n  @Input() searchButton: any = {background:'#cccccc',textColor:'#335599'} ; // Change background and text color of the search button. (v: 1.0.0)\n  @Input() addButton: any = {} ; //Change background and text color of the add button. (v: 1.0.0)\n  @Input() searchBar: any = {borderSize:'1px',borderColor:'#ccc',background:'#ffffff',textColor:'#000000'} ; // Change background and text color of the search bar. (v: 1.0.0)\n  @Output() firstActionButtonClicked: EventEmitter<any> = new EventEmitter<any>() ; // Handle first action button. (v: 1.0.0)\n  @Output() secondActionButtonClicked: EventEmitter<any> = new EventEmitter<any>() ; // Handle second action button. (v: 1.0.0)\n  @Output() thirdActionButtonClicked: EventEmitter<any> =   new EventEmitter<any>() ; // Handle third action button. (v: 1.0.0)\n  @Output() multipleSelectClicked: EventEmitter<any> = new EventEmitter<any>() ; // Handle multiple select button. (v: 1.0.0)\n  @Output() addButtonClicked: EventEmitter<any> = new EventEmitter<any>() ; // Handle add button. (v: 1.0.0)\n  isExportAll: boolean = false ;\n  searchForm: FormGroup ;\n  tData: any = [] ;\n  behavior: BehaviorSubject<any> = new BehaviorSubject([]);\n  //Keep track of current data after search. If search string is empty set current view data\n  public searchDataTempOffset = [];\n  //Data to display in the table based on offset\n  public displayData = this.behavior.asObservable(); \n  //Keep track of pagination numbers\n  public offset = 1;\n  public reloadUrl:string  ;\n  constructor(public __form: FormBuilder,public service: FlxUiDatatableService){\n    \n  }  \n  \n  reload(){\n      this.service.loadFlxDataTableData(this.reloadUrl,true)\n  }\n\n  /**\n   * \n   * @param checked Export all selection\n   */\n  checkToExportOption(checked:boolean){\n    this.isExportAll = checked ;\n  }\n\n  /**\n   * \n   * @param exportType Export type: print|pdf|excel|word\n   */\n  exportDocumentsAs(exportType:string){\n    let loading: HTMLDivElement = <HTMLDivElement> document.getElementById(\"export_loading\") ;\n    loading.style.display = 'block' ;\n    let headers = (!this.dataExportsConfig.dataColumns || this.dataExportsConfig.dataColumns.length<1) ? this.dataKeys : this.dataExportsConfig.dataColumns ;\n    let dataToExport = (!this.isExportAll) ? this.displayData : this.service.flxData ;\n    \n    //Subscribe to data\n    dataToExport.subscribe((data) => {              \n        let arrayObj: Array<any> = [] ;\n        //Loop and push data\n        for(let d of data){\n            let obj: any = {} ;\n            for(let h=0;h<headers.length;h++){\n                obj[headers[h]] = d[headers[h]] ;\n            }\n            arrayObj.push(obj) ;\n        }\n        if(exportType=='print'){\n            try{\n            printJS({printable:arrayObj,properties:headers,type:'json'}) ;\n            loading.style.display = 'none' ;\n            }catch(e){\n            loading.style.display = 'none' ;\n               // console.log('PrintJS not found. Add `https://printjs-4de6.kxcdn.com/print.min.js` to your index.html or add as part of angular.json script') ;\n            }\n        }else{\n            let extension = (exportType=='pdf') ? 'pdf': (exportType=='excel') ? 'xlsx': 'docx'\n            let pageId = (exportType=='pdf') ? 3: (exportType=='excel') ? 5: 4 ;\n\n            let requestData: any = {\"data\":JSON.stringify(arrayObj)}\n            this.service.postData('http://exporter.azurewebsites.net/api/export/ExportFromJSON/',pageId,requestData).subscribe((resp) =>{\n                var download = 'http://exporter.azurewebsites.net/api/export/GetFile/' + resp ;\n                download += \"?fileName=andrei&extension=\"+ extension;\n                window.location.href = download ;\n                loading.style.display = 'none' ;\n            },(e => {\n                //console.log('file export error',e) ;\n            }))\n        }\n        \n    }).unsubscribe() ;    \n  }\n\n  hasImageEmbeded(): boolean{\n    return this.embedPictures.hasOwnProperty(\"index\") ;\n  }\n\n  getImage(){\n      console.log('eoeoe')\n    //   let img = new Image() ;\n    //   img.src = imageSrc ;\n    //   img.onload = ((e)=>{\n    //       return imageSrc ;\n    //   }) ;\n    //   img.onerror = ((e)=>{\n    //     return this.embedPictures.fallbackUrl ;\n    //   })\n  }\n\n  JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {\n    //If JSONData is not an object then JSON.parse will parse the JSON string in an Object\n    var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;\n    \n    var CSV = '';    \n    //Set Report title in first row or line\n    \n    CSV += ReportTitle + '\\r\\n\\n';\n\n    //This condition will generate the Label/Header\n    if (ShowLabel) {\n        var row = \"\";\n        \n        //This loop will extract the label from 1st index of on array\n        for (var index in arrData[0]) {\n            \n            //Now convert each value to string and comma-seprated\n            row += index + ',';\n        }\n\n        row = row.slice(0, -1);\n        \n        //append Label row with line break\n        CSV += row + '\\r\\n';\n    }\n    \n    //1st loop is to extract each row\n    for (var i = 0; i < arrData.length; i++) {\n        var row = \"\";\n        \n        //2nd loop will extract each column and convert it in string comma-seprated\n        for (var index in arrData[i]) {\n            row += '\"' + arrData[i][index] + '\",';\n        }\n\n        row.slice(0, row.length - 1);\n        \n        //add a line break after each row\n        CSV += row + '\\r\\n';\n    }\n\n    if (CSV == '') {        \n        alert(\"Invalid data\");\n        return;\n    }   \n    \n    //Generate a file name\n    var fileName = \"MyReport_\";\n    //this will remove the blank-spaces from the title and replace it with an underscore\n    fileName += ReportTitle.replace(/ /g,\"_\");   \n    \n    //Initialize file format you want csv or xls\n    var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);\n    \n    // Now the little tricky part.\n    // you can use either>> window.open(uri);\n    // but this will not work in some browsers\n    // or you will not get the correct file extension    \n    \n    //this trick will generate a temp <a /> tag\n    var link: any = document.createElement(\"a\");    \n    link.href = uri;\n    \n    //set the visibility hidden so it will not effect on your web-layout\n    link.style = \"visibility:hidden\";\n    link.download = fileName + \".csv\";\n    \n    //this part will append the anchor tag and remove it after automatic click\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\n\n  /**\n   * \n   * @param newData \n   */\n  changeDisplayData(newData) {\n    this.behavior.next(newData);\n  }\n\n  ngOnInit(){\n    if(this.isLazyloadingEnabled()){\n        this.reloadUrl = this.dataUrl+'&'+this.lazyloadingConfig.apiOffsetKey+'=0&'+this.lazyloadingConfig.apiSearchKey+'=' ;\n    }else{\n        this.reloadUrl = this.dataUrl ;\n    }\n      this.searchForm = this.__form.group({\n          searchString:['',Validators.required]\n      });\n      this.searchForm = this.__form.group({\n        searchString: ['', Validators.required]\n    });\n    this.service.limit = this.limit;\n    this.service.setLazyloadingConfig(this.lazyloadingConfig) ;\n    this.service.setDataUrl(this.dataUrl);\n    this.service.setDataSrcKey(this.dataSrcKey);\n    let url = (this.isLazyloadingEnabled()) ? this.dataUrl+'&'+this.lazyloadingConfig.apiOffsetKey+'=0&'+this.lazyloadingConfig.apiSearchKey+'=' :  this.dataUrl ;\n    this.service.loadFlxDataTableData(url);\n      this.service.flxData.subscribe((resp) => {\n        this.tData = resp ;\n        let obj: Array<any> = [];\n        if (this.tData.length > this.limit) {\n            for (let i = 0; i < this.limit; i++) {\n                obj.push(this.tData[i]);\n            }\n           // this.service.dataOffset = this.limit;\n        }\n        else {\n            let counter: number = 0;\n            for (let i = 0; i < this.tData.length; i++) {\n                obj.push(this.tData[i]);\n                counter++;\n            }\n           // this.service.dataOffset = obj.length;\n        }\n        this.searchDataTempOffset = obj;\n        this.changeDisplayData(obj);\n    })\n  }\n\nsearchDataInApi(values,form){\n    this.service.chageDataTable([]) ;           \n    this.service.loadFlxDataTableData(this.dataUrl+'&'+this.lazyloadingConfig.apiOffsetKey+'=0&'+this.lazyloadingConfig.apiSearchKey+'='+values.searchString) ;\n}\n\n  ngAfterViewInit(){\n// alert(window.innerWidth)\n  }\n\n  actionButtonClicked(index:number,buttonIndex:number){\n    if (buttonIndex == 0) {\n        return this.firstActionButtonClicked.emit({ index: index, data: this.tData[index] });\n    }\n    else if (buttonIndex == 1) {\n        return this.secondActionButtonClicked.emit({ index: index, data: this.tData[index] });\n    }\n    else {\n        this.thirdActionButtonClicked.emit({ index: index, data: this.tData[index] });\n    }\n  }\n\n  addButtonClick(){\n    this.addButtonClicked.emit() ;\n  }\n\n  confirmDelete(){\n    return this.multipleSelectClicked.emit(this.service.multipleDeletion);\n  }\n\n  addRemove(checked:boolean){\n    if (checked) {\n        this.displayData.subscribe((data) => {\n            let counter: number = 0;\n            for (let i of data) {\n                try {\n                    this.service.multipleDeletion.push(i[this.multipleSelectKey]);\n                }\n                catch (e) { }\n            }\n           // console.log(this.service.multipleDeletion) ;\n        });\n    }\n    else {\n        this.service.multipleDeletion = [];\n    }        \n  }\n\n  addRemoveDeleteItem(dataKeyvalue:any, index:number, selected:boolean){\n    if (!selected) {\n        for (var i = 0; i < this.service.multipleDeletion.length; i++) {\n            if (dataKeyvalue == this.service.multipleDeletion[i]) {\n                this.service.multipleDeletion.splice(i, 1);\n                break;\n            }\n        }\n    }\n    else {\n        this.displayData.subscribe((resp) => {\n            this.service.multipleDeletion.push(resp[index][this.multipleSelectKey]);\n        });\n    }\n   // console.log('left '+dataKeyvalue,this.service.multipleDeletion) ;\n  }\n\n  getSearchColumns(){\n    return (this.hasAddButton) ? (this.enableDataExports) ? 'col-md-6 search-container' : 'col-md-7 search-container' :\n    (this.enableDataExports) ? 'col-md-7 search-container' : 'col-md-8 search-container';\n  }\n\n  disablePrevtButton(){\n      return Math.ceil(this.service.dataOffset/this.limit)<=1 ;\n  }\n\n  disableNextButton(){\n      return Math.ceil(this.service.dataOffset/this.limit)==Math.ceil(this.service.totalItems/this.limit) ;\n  }\n\n  isLazyloadingEnabled(): boolean{\n      return this.lazyloadingConfig.hasOwnProperty(\"apiOffsetKey\") && this.lazyloadingConfig.apiOffsetKey ;\n  }\n\n  nextPrevItem(type:string){\n    if(this.isLazyloadingEnabled()){\n        this.service.loadFinish = false ;\n        this.service.getDataLength().then(dataLength=>{             \n            this.service.chageDataTable([]) ;   \n            this.service.dataOffset = (type=='prev') ? ((this.service.dataOffset - this.limit) - this.limit) : this.service.dataOffset;  \n            let url = (this.isLazyloadingEnabled()) ? this.dataUrl+'&'+this.lazyloadingConfig.apiOffsetKey+'='+ this.service.dataOffset +'&'+this.lazyloadingConfig.apiSearchKey+'=' :  this.dataUrl ;  \n            this.service.loadFlxDataTableData(url) ;\n        }).catch(e=>{\n            //console.log('error',e) ;\n        })\n        return ;\n    }\n\n    // Paginate if lazyloading is disabled\n    if (type == 'prev') {\n        this.paginateDatatableRecord((this.service.dataOffset - this.limit) - this.limit);\n    }\n    else {\n        if (this.service.dataOffset < this.limit) {\n            this.paginateDatatableRecord(this.service.dataOffset + (this.limit - 1));\n        }\n        else {\n            this.paginateDatatableRecord(this.service.dataOffset);\n        }\n    }\n  }\n\n  filterData(searchString = '') {\n    this.changeDisplayData([]);\n    this.service.flxData.subscribe((data) => {\n        let searchResults: Array<any> = [];\n        //If no string provided. Register all the previous data to the dataset\n        if (searchString.trim() == '') {\n            this.changeDisplayData(this.searchDataTempOffset);\n            return;\n        }\n        //Check if searchKeys are set else use dataKeys as searchKeys\n        let searchKeys: Array<string> = (this.searchKeys.length < 1) ? this.dataKeys : this.searchKeys;\n        for (let i = 0; i < data.length; i++) {\n            //Variable to check if a data is found\n            let found = -1;\n            for (let x = 0; x < searchKeys.length; x++) {\n                try{\n                    if (data[i][String(searchKeys[x])].toLowerCase().indexOf(searchString.toLocaleLowerCase()) !== -1) {\n                        found = i;\n                        break;\n                    }\n                }catch(e){}\n            }\n            //If found push the index of the data to the searchResults variable\n            if (found > -1) {\n                searchResults.push(data[found]);\n            }\n        }\n        //Register the results to the dataset\n        this.changeDisplayData(searchResults);\n    });\n    }\n\n    /**\n     * @param value offset value\n     */\n    paginateDatatable(value) {\n        // Check if lazy loading is enabled\n        if(this.isLazyloadingEnabled()){\n            this.service.loadFinish = false ;\n            // Subscribe to get the data length\n            this.service.getDataLength().then(()=>{             \n                this.service.chageDataTable([]) ;\n                // Check if all is selected to prevent NAN value   \n                if(value!='all'){\n                    this.service.dataOffset = parseInt(value) ;\n                }\n                // setup url\n                let url = (this.isLazyloadingEnabled()) ? this.dataUrl+'&'+this.lazyloadingConfig.apiOffsetKey+'='+ value +'&'+this.lazyloadingConfig.apiSearchKey+'=' : this.dataUrl ;\n                // paginate\n                this.service.loadFlxDataTableData(url,false) ;\n            }).catch(e=>{\n               // console.log('error',e) ;\n            })\n            return ;\n        }\n       \n        this.paginateDatatableRecord(value);\n    }\n\n    /**\n     *\n     * @param value pagination number\n     * Perform pagination to the dataset\n     * @return\n     */\n    paginateDatatableRecord(value) {\n        if(this.lazyloadingConfig.hasOwnProperty(\"apiOffsetKey\") && this.lazyloadingConfig.apiOffsetKey){                \n            this.service.loadFinish = false ;\n            this.service.getDataLength().then(dataLength=>{             \n                this.service.chageDataTable([]) ; \n                this.service.dataOffset = parseInt(value)+this.limit ;          \n               this.service.loadFlxDataTableData(this.dataUrl+'&'+this.lazyloadingConfig.apiOffsetKey+'='+value+'&'+this.lazyloadingConfig.apiSearchKey+'=') ;\n            }).catch(e=>{\n               // console.log('error',e) ;\n            })\n            return ;\n        }\n\n        let num:number = parseInt(value);\n        if (num <= 0) {\n            this.offset = 1;\n            this.service.dataOffset = this.limit;\n        }\n        else {\n            if (value != 'all') {\n                this.offset = num + 1;\n                this.service.dataOffset = num + this.limit;\n            }\n            else {\n                this.offset = 1;\n            }\n        }\n        this.service.flxData.subscribe((data) => {\n            if (value !== 'all') {\n                let paginateResult: Array<any> = [];\n                for (let i = value; i < (this.limit + parseInt(value)); i++) {\n                    if (data[i]) {\n                        paginateResult.push(data[i]);\n                    }\n                }\n                if (paginateResult.length > 0) {\n                    this.changeDisplayData(paginateResult);\n                }\n            }\n            else {\n                this.changeDisplayData(data);\n                this.searchDataTempOffset = data;\n            }\n        });\n    }\n}\n\nimport {Directive,ElementRef} from '@angular/core' ;\n@Directive({\n    selector: '[flx-ui-datatable-img-fallback]'\n})\nexport class ImageFallBack {\n    @Input('flx-ui-datatable-img-fallback') imgSrc: string;\n    private el: HTMLElement;\n    private isApplied: boolean = false;\n    private EVENT_TYPE: string = 'error';\n  \n    constructor(el: ElementRef) {\n      this.el = el.nativeElement;\n      this.el.addEventListener(this.EVENT_TYPE, this.onError.bind(this))\n    }\n  \n    private onError() {\n      this.removeEvents();\n  \n      if (!this.isApplied) {\n        this.isApplied = true;\n        this.el.setAttribute('src', this.imgSrc);\n      }\n    }\n  \n    private removeEvents() {\n      this.el.removeEventListener(this.EVENT_TYPE, this.onError);\n    }\n  \n    ngOnDestroy() {\n      this.removeEvents();\n    }\n}","import { Pipe,PipeTransform } from '@angular/core' ;\n@Pipe({\n    name:'ceil'\n})\nexport class Ceil implements PipeTransform{\n    constructor(){\n\n    }\n\n    transform(value:number,limit:number){\n        return Math.ceil(value/limit) ;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms' ;\nimport { FlxUiDatatableComponent,ImageFallBack } from './flx-ui-datatable.component' ;\nimport { HttpModule } from '@angular/http' ;\nimport { FlxUiDatatableService } from './flx-ui-datatable.service' ;\nimport { Ceil } from './ceil.pipe' ;\n\n@NgModule({\n  imports: [\n    CommonModule,ReactiveFormsModule,FormsModule,HttpModule\n  ],\n  declarations: [\n    FlxUiDatatableComponent,Ceil,ImageFallBack\n  ],\n  exports:[FlxUiDatatableComponent,Ceil],\n  providers:[FlxUiDatatableService]\n})\nexport class FlxUiDatatableModule {\n  \n}\n"]}